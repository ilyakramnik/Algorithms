        -:    0:Source:C:/Users/User/Contests_2nd grade/Contest5/Second_max/main.cpp
        -:    0:Graph:C:\Users\User\Contests_2nd grade\Contest5\Second_max\cmake-build-debug-coverage\CMakeFiles\Second_max.dir\main.cpp.gcno
        -:    0:Data:C:\Users\User\Contests_2nd grade\Contest5\Second_max\cmake-build-debug-coverage\CMakeFiles\Second_max.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <iostream>
        -:    2:
        -:    3:class Tree {
        -:    4:public:
function _ZN4TreeC1Ev called 19 returned 100% blocks executed 100%
       19:    5:    Tree() {
       19:    6:        left_ = right_ = nullptr;
       19:    7:    }
        -:    8:
function _ZN4TreeD1Ev called 17 returned 100% blocks executed 100%
       34:    9:    ~Tree() {
       17:   10:        delete left_;
       17:   10-block  0
branch  0 taken 8 (fallthrough)
branch  1 taken 9
        8:   10-block  1
call    2 returned 8
call    3 returned 8
       17:   11:        delete right_;
       17:   11-block  0
branch  0 taken 8 (fallthrough)
branch  1 taken 9
        8:   11-block  1
call    2 returned 8
call    3 returned 8
       17:   12:    };
        -:   13:
function _ZN4Tree6insertEi called 26 returned 100% blocks executed 100%
       26:   14:    void insert(int value) {
       26:   15:        if (left_ == nullptr && right_ == nullptr) {
       26:   15-block  0
branch  0 taken 9 (fallthrough)
branch  1 taken 17
        9:   15-block  1
branch  2 taken 9 (fallthrough)
branch  3 taken 0
        9:   16:            val_ = value;
        9:   17:            left_ = new Tree;
        9:   17-block  0
call    0 returned 9
call    1 returned 9
        9:   18:            right_ = new Tree;
call    0 returned 9
call    1 returned 9
        -:   19:        } else {
       17:   20:            if (val_ > value) {
       17:   20-block  0
branch  0 taken 11 (fallthrough)
branch  1 taken 6
       11:   21:                left_->insert(value);
       11:   21-block  0
call    0 returned 11
        6:   22:            } else if (val_ < value) {
        6:   22-block  0
branch  0 taken 6 (fallthrough)
branch  1 taken 0
        6:   23:                right_->insert(value);
        6:   23-block  0
call    0 returned 6
        -:   24:            }
        -:   25:        }
       26:   26:    }
        -:   27:
function _ZN4Tree4max2Ev called 1 returned 100% blocks executed 71%
        1:   28:    int max2() {
        1:   29:        if (right_->right_ != nullptr) {
        1:   29-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   30:            if (right_->right_->left_ == nullptr && right_->right_->right_ == nullptr) {
        1:   30-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   30-block  1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:   31:                int max_2 = -1, curr = val_;
        1:   32:                if (right_->left_->left_ != nullptr && right_->left_->right_ != nullptr) {
        1:   32-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   32-block  1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:   33:                    int flag = 0;
        1:   34:                    right_ = right_->left_;
        1:   35:                    max_2 = right_->val_;
        1:   35-block  0
       1*:   36:                    while (right_->right_->right_ != nullptr) {
        1:   36-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   37:                        right_ = right_->right_;
    #####:   38:                        flag = 1;
    %%%%%:   38-block  0
        -:   39:                    }
        1:   40:                    if (flag) {
        1:   40-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   41:                        max_2 = val_;
    %%%%%:   41-block  0
        -:   42:                    }
        -:   43:                }
        1:   44:                return std::max(curr, max_2);
        1:   44-block  0
call    0 returned 1
        -:   45:            } else {
    #####:   46:                right_->max2();
    %%%%%:   46-block  0
call    0 never executed
        -:   47:            }
        -:   48:        } else {
    #####:   49:            right_->max2();
    %%%%%:   49-block  0
call    0 never executed
        -:   50:        }
    #####:   51:    }
    %%%%%:   51-block  0
        -:   52:
        -:   53:private:
        -:   54:    int val_{};
        -:   55:    Tree *left_{};
        -:   56:    Tree *right_{};
        -:   57:};
        -:   58:
function main called 1 returned 100% blocks executed 88%
        1:   59:int main() {
        1:   60:    std::ios::sync_with_stdio(false);
        1:   60-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   61:    std::cin.tie(nullptr);
        1:   61-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   62:    std::cout.tie(nullptr);
        1:   62-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   63:
        2:   64:    Tree tree;
        1:   64-block  0
call    0 returned 1
        1:   64-block  1
call    1 returned 1
    $$$$$:   64-block  2
call    2 never executed
        -:   65:    int num;
        1:   66:    std::cin >> num;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       10:   67:    while (num != 0) {
       10:   67-block  0
branch  0 taken 9 (fallthrough)
branch  1 taken 1
        9:   67-block  1
        9:   68:        tree.insert(num);
        9:   68-block  0
call    0 returned 9
branch  1 taken 9 (fallthrough)
branch  2 taken 0 (throw)
        9:   69:        std::cin >> num;
        9:   69-block  0
call    0 returned 9
branch  1 taken 9 (fallthrough)
branch  2 taken 0 (throw)
        -:   70:    }
        1:   71:    std::cout << tree.max2();
        1:   71-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   71-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   72:}
        1:   72-block  0
